{"version":3,"sources":["components/NavigationBar.js","components/Header.js","components/HomeHeading.js","components/HomeImagePlaceholders.js","components/HomeVideoTutorials.js","components/HomeSeeAllVideosButton.js","components/Home.js","api.js","components/Courses.js","components/Experiments.js","components/CourseExperimentSchedule.js","components/CourseNotebooksReports.js","components/CourseLabRegulations.js","components/Course.js","components/ExperimentBackgroundCard.js","components/ExperimentChemicalsCard.js","components/ProcedureButtons.js","components/ExperimentProceduresCard.js","components/Experiment.js","components/Routes.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","justify","fill","variant","Item","Link","to","Header","HomeHeading","className","image_style","HomeImagePlaceholders","xs","md","style","src","rounded","HomeVideoTutorials","HomeSeeAllVideosButton","href","block","Home","Fragment","ChemicalsAPI","chemicals","all","this","get","chemicalID","find","c","filtered","filterArray","filter","chemical","includes","CoursesAPI","courses","id","ExperimentsAPI","experiments","courseID","e","week","ProceduresAPI","procedures","experimentID","PictogramsAPI","pictograms","pictogram","pictogramID","pictogramMap","_pictogramMap","forEach","pictogram_ids","pictogram_arr","pictogram_id","push","Courses","map","key","name","Experiments","props","_courseID","parseInt","match","params","CourseExperimentSchedule","Toggle","as","Card","eventKey","Collapse","Body","CourseNotebooksReports","useState","markdown","setValue","useEffect","a","path","fetch","then","res","text","fetchData","source","escapeHtml","CourseLabRegulations","Course","course","instructor","ExperimentBackgroundCard","cardID","open","setOpen","onClick","aria-controls","aria-expanded","in","ExperimentChemicalsCard","height","chemicalCard","i","Title","Subtitle","cas","Text","safety_guideline","Img","filename","imageElements","ProcedureButtons","procedureIds","Array","from","length","v","k","root_path","files","file","promises","Promise","results","markdownMap","ProcedureButton","React","step","ExperimentProceduresCard","procedure","procedureID","openCard","setOpenCard","Experiment","_experimentID","_experiment","_chemicals","chemical_ids","Routes","exact","component","Main","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bff4951e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Nav from \"react-bootstrap/Nav\";\n\n// Exports to Header.js\nconst NavigationBar = () => (\n  <Nav justify fill variant=\"tabs\">\n    <Nav.Item>\n    \t<Nav.Link>\n    \t\t<Link to='/'>Home</Link>\n    \t</Nav.Link>   \n    </Nav.Item>\n\n    <Nav.Item>\n    \t<Nav.Link>\n    \t\t<Link to='/courses'>Courses</Link>\n    \t</Nav.Link>\n    </Nav.Item>\n\n    <Nav.Item>\n    \t<Nav.Link>\n    \t\t<Link to='/'>Videos</Link>\n    \t</Nav.Link>   \n    </Nav.Item>\n\n    <Nav.Item>\n    \t<Nav.Link>\n    \t\t<Link to='/'>Safety</Link>\n    \t</Nav.Link>   \n    </Nav.Item>\n  </Nav>\n);\n\nexport default NavigationBar","import React from 'react'\nimport NavigationBar from './NavigationBar'\n\n// Exports to App.js\nconst Header = () => (\n  <header>\n    <NavigationBar />\n  </header>\n)\n\nexport default Header","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\n\n// Export to Home.js\nconst HomeHeading = () => (\n\t<Container className=\"p-3\">\n\t\t<h1>Barnard Organic Chemistry Laboratory</h1>\n\t\t<p>Welcome Text goes here. Lorem Impsum dolor amet kickstarter before</p>\n\n\t\t<h4>For Fall 2019 Students</h4>\n\t\t<p>View this week's experiment, your lab manual, and other course information</p>\n\t</Container>\n);\n\nexport default HomeHeading;","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport Container from \"react-bootstrap/Container\";\n\n\nconst image_style = { \"height\": \"10rem\", \"width\": \"10rem\" }\n\nconst HomeImagePlaceholders = () => (\n    <Container className=\"p-3\">\n      <Row>\n        <Col xs={6} md={3}>\n          <Image style = { image_style } src=\"/../beakers.jpg\" rounded />\n        </Col>\n        \n        <Col xs={6} md={3}>\n          <Image style = { image_style } src=\"/../molecule.jpg\" rounded />\n        </Col>\n\n        <Col xs={6} md={3}>\n          <Image style = { image_style } src=\"/../beakers.jpg\" rounded />\n        </Col>\n        \n        <Col xs={6} md={3}>\n          <Image style = { image_style } src=\"/../molecule.jpg\" rounded />\n        </Col>\n      </Row>\n    </Container>\n);\n\nexport default HomeImagePlaceholders;","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\n\n\nconst HomeVideoTutorials = () => (\n    <Container className=\"p-3\">\n      <h4>Video Tutorials</h4>\n      <p>Learn lab techniques and more</p>\n    </Container>\n);\n\nexport default HomeVideoTutorials;","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nconst HomeSeeAllVideosButton = () => (\n    <Container className=\"p-3\">\n      <Button variant=\"primary\" href=\"#\" block>\n        See All Video Tutorials\n      </Button>\n    </Container>\n);\n\nexport default HomeSeeAllVideosButton;","import React from 'react'\nimport HomeHeading from './HomeHeading'\nimport HomeImagePlaceholders from './HomeImagePlaceholders'\nimport HomeVideoTutorials from './HomeVideoTutorials'\nimport HomeSeeAllVideosButton from './HomeSeeAllVideosButton'\n\n\n//<CourseLinkButtons />\nconst Home = () => (\n\t<React.Fragment>\n\t    <HomeHeading />\n    \t<HomeVideoTutorials />\n    \t<HomeImagePlaceholders />\n    \t<HomeSeeAllVideosButton />\n    </React.Fragment>\n)\n\nexport default Home","import chemicals from './data/chemicals.json';\nimport courses from './data/courses.json';\nimport experiments from './data/experiments.json'\nimport pictograms from './data/pictograms.json'\nimport procedures from './data/procedures.json'\n\n\nconst ChemicalsAPI = {\n  chemicals: chemicals,\n  \n  all: function() {\n    return this.chemicals;\n  },\n\n  get: function(chemicalID) {\n    const isChemical = c => c.chemicalID === chemicalID;\n    return this.chemicals.find(isChemical);\n  },\n\n  filtered: function(filterArray) {\n    const Chemicals = this.chemicals;\n    const filteredChemicals = Chemicals.filter(function(chemical) {\n      return filterArray.includes(chemical.chemicalID);\n    });\n    return filteredChemicals;\n  }\n};\n\n\nconst CoursesAPI = {\n  courses: courses,\n  all: function() {\n    return this.courses;\n  },\n\n  get: function(id) {\n    const isCourse = c => c.id === id;\n    return this.courses.find(isCourse);\n  }\n};\n\n\nconst ExperimentsAPI = {\n  // May need to add new primary key\n  // experimentID --> might duplicate due to multiple weeks\n  // Weeks --> might be better to call them \"parts\"\n  experiments: experiments,\n\n  all: function(courseID) {\n    return this.experiments;\n  },\n\n  filtered: function(courseID) {\n    return this.experiments.filter(e => e.courseID === courseID);\n  },\n\n  get: function(courseID, week) {\n    const isExperiment = e => e.week === week && e.courseID === courseID;\n    return this.experiments.find(isExperiment);\n  }\n};\n\n\nconst ProceduresAPI = {\n  procedures: procedures,\n\n  all: function() {\n    return this.procedures;\n  },\n\n  filtered: function(experimentID) {\n    return this.procedures.filter(e => e.experimentID === experimentID);\n  }\n};\n\n\nconst PictogramsAPI = {\n  \n  pictograms: pictograms,\n\n  all: function() { \n    return this.pictograms\n  },\n\n  filtered: function(filterArray) {\n    const Pictograms = this.pictograms\n    const filteredPictograms = Pictograms.filter(function (pictogram) {\n      return filterArray.includes(pictogram.pictogramID)\n    });\n    return filteredPictograms\n  },\n\n  pictogramMap: function (chemicals) {\n    const pictograms = this.pictograms\n    const _pictogramMap = {}\n\n    chemicals.forEach(function (chemical) {\n      const pictogram_ids = chemical.pictogram_ids\n      const pictogram_arr = []\n\n      pictogram_ids.forEach(function (pictogram_id) {\n        const pictogram = pictograms.find(({ pictogramID }) => pictogramID === pictogram_id)\n        pictogram_arr.push(pictogram)\n        _pictogramMap[chemical.chemicalID] = pictogram_arr\n      });\n    });\n    return _pictogramMap\n  }\n}\n\n\nconst ScheduleAPI = {\n  // https://stackoverflow.com/questions/16590500/javascript-calculate-date-from-week-number\n  get_date: function (w, y) {\n    var simple = new Date(Date.UTC(y, 0, 1 + (w - 1) * 7));\n    var dow = simple.getDay();\n    var ISOweekStart = simple;\n    if (dow <= 4)\n      ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);\n    else\n      ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\n    return ISOweekStart;\n  }\n}\n\n\n\n\n\nexport {CoursesAPI, ExperimentsAPI, ProceduresAPI, ChemicalsAPI, PictogramsAPI }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport { CoursesAPI }  from '../api'\nimport { Link } from 'react-router-dom'\n\n\nconst Courses = () => (\n  <div>\n    <ul>\n      {CoursesAPI.all().map(c => (\n        <li key={c.id}>\n          <Link to={`/courses/${c.id}`}>{c.name}</Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Courses","import React from 'react'\nimport { ExperimentsAPI }  from '../api'\nimport { Link } from 'react-router-dom'\n\n\nconst Experiments = props => {\n  const _courseID = parseInt(props.match.params.id, 10);\n\n  return (\n    <div>\n      <ul>\n        {ExperimentsAPI.filtered(_courseID).map(e => (\n          <li key={e.experimentID}>\n            <Link to={`experiments/${e.week}`}>{e.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Experiments\n\n\n\n","import React from \"react\";\nimport { ExperimentsAPI }  from '../api'\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\n\n\n// Exports to Course.js\nconst CourseExperimentSchedule = ({courseID}) => {\n\n  const schedule = () => {\n    return ExperimentsAPI.filtered(courseID).map(e => (\n      <React.Fragment>\n        <li key={e.experimentID}>\n          Week {e.week}: &nbsp;\n          <Link to={`${courseID}/experiments/${e.week}`}>{e.name}</Link>\n        </li>\n      </React.Fragment>\n    ));\n  };\n  \n  return (\n    <Card >\n      <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n        Experiment Schedule\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey=\"0\">\n        <Card.Body>\n          <ul>\n            {schedule()}\n          </ul>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  );\n};\n\nexport default CourseExperimentSchedule;\n","import React, { useState, useEffect } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactMarkdown from \"react-markdown/with-html\"\n\n\n// Exports to Course.js\nconst CourseNotebooksReports = ({ courseID }) => {\n\tconst [markdown, setValue] = useState([]);\n\n\t  useEffect(() => {\n\t    async function fetchData() {\n\t      const path = \"/../markdown/notebooks/\" + courseID + \"_notebook.md\";\n\t      const markdown = await fetch(path).then(res => res.text());\n\t      setValue(markdown);\n\t    }\n\t    fetchData();\n\t  }, []);\n\n\treturn(\n\t\t  <Card>\n\t\t    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n\t\t      Notebooks and Reports\n\t\t    </Accordion.Toggle>\n\t\t    <Accordion.Collapse eventKey=\"1\">\n\t\t        <Card.Body>\n\t\t          <ReactMarkdown source = { markdown } escapeHtml={ false } />\n\t\t        </Card.Body>\n\t\t    </Accordion.Collapse>\n\t\t  </Card>\n\t\t);\n};\n\nexport default CourseNotebooksReports\n\n\n","import React, { useState, useEffect } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactMarkdown from \"react-markdown/with-html\"\n\n\n// Exports to Course.js\nconst CourseLabRegulations = () => {\n  const [markdown, setValue] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const path = \"/../markdown/lab_regs.md\";\n      const markdown = await fetch(path).then(res => res.text());\n      setValue(markdown);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <Card>\n      <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n        Lab Regulations\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey=\"2\">\n        <Card.Body>\n          <ReactMarkdown source={markdown} escapeHtml={false} />\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  );\n};\n\nexport default CourseLabRegulations;","import React from \"react\";\nimport { CoursesAPI } from \"../api\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport CourseExperimentSchedule from \"./CourseExperimentSchedule\";\nimport CourseNotebooksReports from \"./CourseNotebooksReports\";\nimport CourseLabRegulations from \"./CourseLabRegulations\";\n\n\nconst Course = props => {\n  // Parse number/week/id from pathname.\n  const course = CoursesAPI.get(parseInt(props.match.params.id, 10));\n\n  if (!course) {\n    return <div>Sorry, course not found.</div>;\n  }\n\n  const _courseID = course.id;\n\n  return (\n    <Container className=\"p-3\">\n      <h3> {course.name} </h3>\n      <h5> Instructor: {course.instructor} </h5>\n      <p> Welcome to {course.name}! </p>\n      <Accordion>\n        <CourseExperimentSchedule courseID = { _courseID } />\n        <CourseNotebooksReports courseID = { _courseID } />\n        <CourseLabRegulations />\n      </Accordion>\n      <br />\n      {/* <Link to={`${_courseID}/experiments`}>Experiments</Link> */}\n    </Container>\n  );\n};\n\nexport default Course;\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport ReactMarkdown from \"react-markdown/with-html\"\n\n\n// Exports: Experiment.js\nconst ExperimentBackgroundCard = ({ experimentID }) => {\n  const cardID = 'theoretical-background-card-body'\n  const [markdown, setValue] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      const path = \"/../markdown/backgrounds/\" + experimentID + \"_background.md\";\n      const markdown = await fetch(path).then(res => res.text());\n      setValue(markdown);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <Card>\n      <Card.Header onClick={ () => setOpen(!open) } aria-controls = {cardID} aria-expanded={ open } >\n        Theoretical Background\n      </Card.Header>\n      <Collapse in = { open } >\n        <Card.Body id = { cardID } >\n          <ReactMarkdown source={markdown} escapeHtml={false} />\n        </Card.Body>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default ExperimentBackgroundCard;\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\";\nimport Collapse from \"react-bootstrap/Collapse\";\n\n\nconst ExperimentChemicalsCard = ( { chemicals, pictogramMap } ) => {\n\tconst root_path = \"/../pictograms/\";\n\tconst image_style = { height: \"3rem\" };\n\tconst cardID = \"chemicals-card-body\";\n\tconst [open, setOpen] = useState(false);\n\n\tconst imageElements = chemicalID => {\n\t  const pictograms = pictogramMap[chemicalID];\n\t  if (pictograms[0].pictogramID === 10) {\n\t    return null;\n\t  }\n\t  return pictograms.map(pictogram => (\n\t    <Card.Img variant=\"buttom\" src={root_path + pictogram.filename} style={image_style} />\n\t  ));\n\t};\n\n\tconst chemicalCard = chemicals.map((chemical, i) =>\n\t\t<React.Fragment>\n\t\t\t<Card.Title > { chemical.name } </Card.Title>\n\t\t\t<Card.Subtitle className=\"mb-2 text-muted\"> CAS { chemical.cas } </Card.Subtitle>\n\t\t\t<Card.Text> { chemical.safety_guideline } </Card.Text>\n\t\t\t{imageElements(chemical.chemicalID)}\n\t\t\t<hr />\n\t\t</React.Fragment>\n\t);\n\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header onClick={() => setOpen(!open)} aria-controls={ cardID } aria-expanded={ open } >\n\t\t\t\tChemicals\n\t\t\t</Card.Header>\n\n\t\t\t<Collapse in={ open } >\n\t\t\t\t<Card.Body id={ cardID } >{ chemicalCard }</Card.Body>\n\t\t\t</Collapse>\n\t\t</Card>\n\t);\t\n}\n\nexport default ExperimentChemicalsCard;","import React, { useState, useEffect } from \"react\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Button from \"react-bootstrap/Button\"\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport Container from \"react-bootstrap/Container\";\n\nconst ProcedureButtons = ({ procedureIds, experimentID }) => {\n  const procedureRange = Array.from({length: procedureIds.length}, (v, k) => k + 1); \n  const [markdown, setValue] = useState([]);\n\n\n  useEffect(() => {\n    async function fetchData() {\n      const root_path = \"/../markdown/procedures/\" + experimentID + \"_experiment_procedure/\";\n      const files = procedureIds.map(id => `${root_path + id}_procedure.md`)\n      const promises = await files.map(file =>  fetch(file).then(res => res.text()));\n\n            Promise.all(promises).then(results => { \n              const markdownMap = {}\n              procedureIds.forEach((key, i) => markdownMap[key] = results[i]);\n              setValue(markdownMap)\n            });\n    }\n    fetchData();\n  }, []);\n\n  const ProcedureButton = props => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <Container className=\"p-1\" id = \"ProcedureButtons\">\n            <Button variant=\"outline-info\" onClick={() => setOpen(!open)}>Step: {props.step}</Button>\n            <br/><br/>\n\n            <Collapse in={open}>\n              <ReactMarkdown source={props.markdown} escapeHtml={false} />\n            </Collapse>\n        </Container>\n    );\n  };\n\n  const RenderButtons = ({ procedureIds }) => {\n    return procedureIds.map((id, i) => \n      <ProcedureButton key={ id } markdown = { markdown[id] } step = { i + 1 } />);\n  };\n\n  return <RenderButtons procedureIds={procedureIds} />;\n};\n\nexport default ProcedureButtons;\n\n ","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Button from \"react-bootstrap/Button\"\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport { ProceduresAPI } from \"../api\";\nimport ProcedureButtons from \"./ProcedureButtons\"\n\nconst ExperimentProceduresCard = ({ experimentID }) => {\n  const cardID = \"procedure-card-body\";\n  const procedures = ProceduresAPI.filtered(experimentID);\n  const procedureIds = procedures.map(procedure => procedure.procedureID);\n  const [openCard, setOpenCard] = useState(false);\n  \n  return (\n    <Card>\n      <Card.Header\n        onClick={() => setOpenCard(!openCard)}\n        aria-controls={cardID}\n        aria-expanded={openCard}\n      >\n        Procedure\n      </Card.Header>\n      <Collapse in={openCard}>\n        <Card.Body id={cardID}>\n          <ProcedureButtons procedureIds = {procedureIds} experimentID = {experimentID} />\n        </Card.Body>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default ExperimentProceduresCard;\n","//import React from \"react\";\nimport React, { useState } from \"react\";\nimport { ExperimentsAPI, ChemicalsAPI, PictogramsAPI } from \"../api\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport ExperimentBackgroundCard from \"./ExperimentBackgroundCard\";\nimport ExperimentChemicalsCard from \"./ExperimentChemicalsCard\"\nimport ExperimentProceduresCard from \"./ExperimentProceduresCard\"\n\n\nconst Experiment = props => {\n  const [open, setOpen] = useState(false);\n  const _courseID = parseInt(props.match.params.id, 10);\n  const _experimentID = parseInt(props.match.params.experimentID, 10);\n  const _experiment = ExperimentsAPI.get(_courseID, _experimentID);\n  const _chemicals = ChemicalsAPI.filtered(_experiment.chemical_ids);\n  const _pictogramMap = PictogramsAPI.pictogramMap(_chemicals);\n\n  if (!_experiment) {\n    return <div>Sorry, experiment not found.</div>;\n  }\n\n  return (\n      <Container>\n        <Container className=\"p-1\">\n          <h3> Week {_experiment.week}: {_experiment.name} </h3>\n        </Container>\n        \n        <Container className=\"p-1\">\n          <ExperimentChemicalsCard chemicals={_chemicals} pictogramMap={_pictogramMap} />\n        </Container>\n\n        <Container className=\"p-1\">\n          <ExperimentBackgroundCard experimentID={_experimentID} />\n        </Container>\n        <Container className=\"p-1\">\n          <ExperimentProceduresCard experimentID={_experimentID} />\n        </Container>\n\n        <Container className=\"p-1\">\n          <Link to=\"/\">Back</Link>{\" \"}\n        </Container>\n      </Container>\n  );\n};\n\nexport default Experiment;","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Courses from './Courses'\nimport Experiments from './Experiments'\nimport Course from './Course'\nimport Experiment from './Experiment'\n\n// Route matching\n// if /courses --> return all\n// if /courses/:id --> return course, etc.\nconst Routes = () => (\n  <Switch>\n    <Route exact path='/courses' component={ Courses }/>\n    <Route exact path='/courses/:id' component={ Course }/>\n    <Route exact path='/courses/:id/experiments' component={ Experiments }/>\n    <Route exact path='/courses/:id/experiments/:experimentID' component={ Experiment }/>\n  </Switch>\n)\n\nexport default Routes","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './Home'\nimport Routes from './Routes'\n\n// Declare the entrypoint routes.\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component = {Home}/>\n      <Route path='/courses' component = {Routes}/>\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import React from 'react'\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Container from \"react-bootstrap/Container\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nconst App = () => (\n  <Container className=\"p-3\">\n    <Header />\n    <Main />    \n  </Container>\n)\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}